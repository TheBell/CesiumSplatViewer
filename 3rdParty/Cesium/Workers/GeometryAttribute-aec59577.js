/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./when-4ca4e419","./Check-430b3551","./Cartesian2-0cd32dae","./defineProperties-24e785e9","./Transforms-54271159","./WebGLConstants-2ddfa2f9"],function(e,a,t,M,n,O,r){"use strict";var i=a.freezeObject({NONE:0,TRIANGLES:1,LINES:2,POLYLINES:3});function v(e,t,n,r){this[0]=a.defaultValue(e,0),this[1]=a.defaultValue(n,0),this[2]=a.defaultValue(t,0),this[3]=a.defaultValue(r,0)}v.packedLength=4,v.pack=function(e,t,n){return n=a.defaultValue(n,0),t[n++]=e[0],t[n++]=e[1],t[n++]=e[2],t[n++]=e[3],t},v.unpack=function(e,t,n){return t=a.defaultValue(t,0),a.defined(n)||(n=new v),n[0]=e[t++],n[1]=e[t++],n[2]=e[t++],n[3]=e[t++],n},v.clone=function(e,t){if(a.defined(e))return a.defined(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):new v(e[0],e[2],e[1],e[3])},v.fromArray=function(e,t,n){return t=a.defaultValue(t,0),a.defined(n)||(n=new v),n[0]=e[t],n[1]=e[t+1],n[2]=e[t+2],n[3]=e[t+3],n},v.fromColumnMajorArray=function(e,t){return v.clone(e,t)},v.fromRowMajorArray=function(e,t){return a.defined(t)?(t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3],t):new v(e[0],e[1],e[2],e[3])},v.fromScale=function(e,t){return a.defined(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=e.y,t):new v(e.x,0,0,e.y)},v.fromUniformScale=function(e,t){return a.defined(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=e,t):new v(e,0,0,e)},v.fromRotation=function(e,t){var n=Math.cos(e),r=Math.sin(e);return a.defined(t)?(t[0]=n,t[1]=r,t[2]=-r,t[3]=n,t):new v(n,-r,r,n)},v.toArray=function(e,t){return a.defined(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):[e[0],e[1],e[2],e[3]]},v.getElementIndex=function(e,t){return 2*e+t},v.getColumn=function(e,t,n){var r=2*t,a=e[r],i=e[1+r];return n.x=a,n.y=i,n},v.setColumn=function(e,t,n,r){var a=2*t;return(r=v.clone(e,r))[a]=n.x,r[1+a]=n.y,r},v.getRow=function(e,t,n){var r=e[t],a=e[t+2];return n.x=r,n.y=a,n},v.setRow=function(e,t,n,r){return(r=v.clone(e,r))[t]=n.x,r[t+2]=n.y,r};var u=new M.Cartesian2;v.getScale=function(e,t){return t.x=M.Cartesian2.magnitude(M.Cartesian2.fromElements(e[0],e[1],u)),t.y=M.Cartesian2.magnitude(M.Cartesian2.fromElements(e[2],e[3],u)),t};var o=new M.Cartesian2;v.getMaximumScale=function(e){return v.getScale(e,o),M.Cartesian2.maximumComponent(o)},v.multiply=function(e,t,n){var r=e[0]*t[0]+e[2]*t[1],a=e[0]*t[2]+e[2]*t[3],i=e[1]*t[0]+e[3]*t[1],u=e[1]*t[2]+e[3]*t[3];return n[0]=r,n[1]=i,n[2]=a,n[3]=u,n},v.add=function(e,t,n){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},v.subtract=function(e,t,n){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n},v.multiplyByVector=function(e,t,n){var r=e[0]*t.x+e[2]*t.y,a=e[1]*t.x+e[3]*t.y;return n.x=r,n.y=a,n},v.multiplyByScalar=function(e,t,n){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n},v.multiplyByScale=function(e,t,n){return n[0]=e[0]*t.x,n[1]=e[1]*t.x,n[2]=e[2]*t.y,n[3]=e[3]*t.y,n},v.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},v.transpose=function(e,t){var n=e[0],r=e[2],a=e[1],i=e[3];return t[0]=n,t[1]=r,t[2]=a,t[3]=i,t},v.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t},v.equals=function(e,t){return e===t||a.defined(e)&&a.defined(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},v.equalsArray=function(e,t,n){return e[0]===t[n]&&e[1]===t[n+1]&&e[2]===t[n+2]&&e[3]===t[n+3]},v.equalsEpsilon=function(e,t,n){return e===t||a.defined(e)&&a.defined(t)&&Math.abs(e[0]-t[0])<=n&&Math.abs(e[1]-t[1])<=n&&Math.abs(e[2]-t[2])<=n&&Math.abs(e[3]-t[3])<=n},v.IDENTITY=a.freezeObject(new v(1,0,0,1)),v.ZERO=a.freezeObject(new v(0,0,0,0)),v.COLUMN0ROW0=0,v.COLUMN0ROW1=1,v.COLUMN1ROW0=2,v.COLUMN1ROW1=3,n.defineProperties(v.prototype,{length:{get:function(){return v.packedLength}}}),v.prototype.clone=function(e){return v.clone(this,e)},v.prototype.equals=function(e){return v.equals(this,e)},v.prototype.equalsEpsilon=function(e,t){return v.equalsEpsilon(this,e,t)},v.prototype.toString=function(){return"("+this[0]+", "+this[2]+")\n("+this[1]+", "+this[3]+")"};var s={POINTS:r.WebGLConstants.POINTS,LINES:r.WebGLConstants.LINES,LINE_LOOP:r.WebGLConstants.LINE_LOOP,LINE_STRIP:r.WebGLConstants.LINE_STRIP,TRIANGLES:r.WebGLConstants.TRIANGLES,TRIANGLE_STRIP:r.WebGLConstants.TRIANGLE_STRIP,TRIANGLE_FAN:r.WebGLConstants.TRIANGLE_FAN,validate:function(e){return e===s.POINTS||e===s.LINES||e===s.LINE_LOOP||e===s.LINE_STRIP||e===s.TRIANGLES||e===s.TRIANGLE_STRIP||e===s.TRIANGLE_FAN}},f=a.freezeObject(s);function c(e){e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT),this.attributes=e.attributes,this.indices=e.indices,this.primitiveType=a.defaultValue(e.primitiveType,f.TRIANGLES),this.boundingSphere=e.boundingSphere,this.geometryType=a.defaultValue(e.geometryType,i.NONE),this.boundingSphereCV=e.boundingSphereCV,this.offsetAttribute=e.offsetAttribute}c.computeNumberOfVertices=function(e){var t,n=-1;for(var r in e.attributes){e.attributes.hasOwnProperty(r)&&a.defined(e.attributes[r])&&a.defined(e.attributes[r].values)&&(n=(t=e.attributes[r]).values.length/t.componentsPerAttribute)}return n};var R=new M.Cartographic,P=new M.Cartesian3,V=new O.Matrix4,G=[new M.Cartographic,new M.Cartographic,new M.Cartographic],_=[new M.Cartesian2,new M.Cartesian2,new M.Cartesian2],W=[new M.Cartesian2,new M.Cartesian2,new M.Cartesian2],B=new M.Cartesian3,F=new O.Quaternion,k=new O.Matrix4,Y=new v;c._textureCoordinateRotationPoints=function(e,t,n,r){var a=M.Rectangle.center(r,R),i=M.Cartographic.toCartesian(a,n,P),u=O.Transforms.eastNorthUpToFixedFrame(i,n,V),o=O.Matrix4.inverse(u,V),s=_,f=G;f[0].longitude=r.west,f[0].latitude=r.south,f[1].longitude=r.west,f[1].latitude=r.north,f[2].longitude=r.east,f[2].latitude=r.south;for(var c=B,l=0;l<3;l++)M.Cartographic.toCartesian(f[l],n,c),c=O.Matrix4.multiplyByPointAsVector(o,c,c),s[l].x=c.x,s[l].y=c.y;var d=O.Quaternion.fromAxisAngle(M.Cartesian3.UNIT_Z,-t,F),y=O.Matrix3.fromQuaternion(d,k),m=e.length,p=Number.POSITIVE_INFINITY,h=Number.POSITIVE_INFINITY,N=Number.NEGATIVE_INFINITY,I=Number.NEGATIVE_INFINITY;for(l=0;l<m;l++)c=O.Matrix4.multiplyByPointAsVector(o,e[l],c),c=O.Matrix3.multiplyByVector(y,c,c),p=Math.min(p,c.x),h=Math.min(h,c.y),N=Math.max(N,c.x),I=Math.max(I,c.y);var C=v.fromRotation(t,Y),b=W;b[0].x=p,b[0].y=h,b[1].x=p,b[1].y=I,b[2].x=N,b[2].y=h;var T=s[0],E=s[2].x-T.x,x=s[1].y-T.y;for(l=0;l<3;l++){var L=b[l];v.multiplyByVector(C,L,L),L.x=(L.x-T.x)/E,L.y=(L.y-T.y)/x}var w=b[0],g=b[1],S=b[2],A=new Array(6);return M.Cartesian2.pack(w,A),M.Cartesian2.pack(g,A,2),M.Cartesian2.pack(S,A,4),A},e.Geometry=c,e.GeometryAttribute=function(e){e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT),this.componentDatatype=e.componentDatatype,this.componentsPerAttribute=e.componentsPerAttribute,this.normalize=a.defaultValue(e.normalize,!1),this.values=e.values},e.GeometryType=i,e.Matrix2=v,e.PrimitiveType=f});
